local __exports = LibStub:GetLibrary("ovale/scripts/ovale_mage")
if not __exports then return end
__exports.registerMageFrostXeltor = function(OvaleScripts)
do
	local name = "xeltor_frost"
	local desc = "[Xel][8.3] Mage: Frost"
	local code = [[
Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_mage_spells)

AddIcon specialization=3 help=main
{
	if not mounted() and not PlayerIsResting() and not IsDead() and not Dead()
	{
		#arcane_intellect
		if not BuffPresent(arcane_intellect_buff any=1) and { not target.Present() or not target.IsFriend() } Spell(arcane_intellect)
		if UnitInParty() and PartyMembersInRange(arcane_intellect) > BuffCountOnAny(arcane_intellect_buff) and PartyMembersWithHealthPercent(more 0) > BuffCountOnAny(arcane_intellect_buff) and { not target.Present() or not target.IsFriend() } Spell(arcane_intellect)
		#summon_arcane_familiar
		if not pet.Present() and { Speed() == 0 or BuffPresent(movement_allowed_buff) } and not Talent(lonely_winter_talent) Spell(summon_water_elemental)
	}

	if InCombat() frostinterruptactions()

	if InCombat() and not target.IsFriend() SafetyDance()

	if InCombat() and not target.DebuffPresent(crowd_control_debuff) and target.InRange(frostbolt) and HasFullControl()
	{
		if not BuffPresent(ice_floes_buff) and not { Speed() == 0 or BuffPresent(movement_allowed_buff) } Spell(ice_floes)

		# Cooldowns
		defaultcdactions()
		defaultshortcdactions()
		defaultmainactions()
	}
}

AddFunction frostinterruptactions
{
 if target.hasmanagedinterrupts() and target.mustbeinterrupted() or not target.hasmanagedinterrupts() and target.isinterruptible()
 {
  if target.inrange(counterspell) and target.isinterruptible() and target.remainingcasttime() <= casttime(counterspell) + gcd() spell(counterspell)
  if target.inrange(quaking_palm) and not target.classification(worldboss) and target.remainingcasttime() <= casttime(quaking_palm) + gcd() spell(quaking_palm)
  if target.distance(less 6) and not target.classification(worldboss) and target.remainingcasttime() <= casttime(haymaker) + gcd() spell(haymaker)
 }
}

AddFunction frostuseitemactions
{
 if item(trinket0slot usable=1) texture(inv_jewelry_talisman_12)
 if item(trinket1slot usable=1) texture(inv_jewelry_talisman_12)
}

AddFunction SafetyDance
{
	if target.istargetingplayer() and { target.distance() <= 8 or IncomingDamage(3) >= MaxHealth() * 0.01 } and not BuffPresent(ice_barrier_buff) Spell(ice_barrier)
	if target.Distance(less 12) and not target.DebuffPresent(frost_nova_debuff) and target.IsPvP() and not IsBossFight() Spell(frost_nova)
	# if target.BuffStealable() and target.InRange(spellsteal) and not PreviousGCDSpell(spellsteal) and ManaPercent() > 90 Spell(spellsteal)
}

### actions.default

AddFunction defaultmainactions
{
 #call_action_list,name=cooldowns,if=ovale.boss&ovale.movement
 if { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } frostcooldownsmainactions()

 unless { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } and frostcooldownsmainpostconditions()
 {
  #call_action_list,name=aoe,if=active_enemies>3&talent.freezing_rain.enabled|active_enemies>4
  if enemies(tagged=1) > 3 and hastalent(freezing_rain_talent) or enemies(tagged=1) > 4 frostaoemainactions()

  unless { enemies(tagged=1) > 3 and hastalent(freezing_rain_talent) or enemies(tagged=1) > 4 } and frostaoemainpostconditions()
  {
   #call_action_list,name=single
   frostsinglemainactions()
  }
 }
}

AddFunction defaultmainpostconditions
{
 { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } and frostcooldownsmainpostconditions() or { enemies(tagged=1) > 3 and hastalent(freezing_rain_talent) or enemies(tagged=1) > 4 } and frostaoemainpostconditions() or frostsinglemainpostconditions()
}

AddFunction defaultshortcdactions
{
 #call_action_list,name=cooldowns,if=ovale.boss&ovale.movement
 if { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } frostcooldownsshortcdactions()

 unless { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } and frostcooldownsshortcdpostconditions()
 {
  #call_action_list,name=aoe,if=active_enemies>3&talent.freezing_rain.enabled|active_enemies>4
  if enemies(tagged=1) > 3 and hastalent(freezing_rain_talent) or enemies(tagged=1) > 4 frostaoeshortcdactions()

  unless { enemies(tagged=1) > 3 and hastalent(freezing_rain_talent) or enemies(tagged=1) > 4 } and frostaoeshortcdpostconditions()
  {
   #call_action_list,name=single
   frostsingleshortcdactions()
  }
 }
}

AddFunction defaultshortcdpostconditions
{
 { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } and frostcooldownsshortcdpostconditions() or { enemies(tagged=1) > 3 and hastalent(freezing_rain_talent) or enemies(tagged=1) > 4 } and frostaoeshortcdpostconditions() or frostsingleshortcdpostconditions()
}

AddFunction defaultcdactions
{
 #counterspell
 frostinterruptactions()
 #call_action_list,name=cooldowns,if=ovale.boss&ovale.movement
 if { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } frostcooldownscdactions()

 unless { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } and frostcooldownscdpostconditions()
 {
  #call_action_list,name=aoe,if=active_enemies>3&talent.freezing_rain.enabled|active_enemies>4
  if enemies(tagged=1) > 3 and hastalent(freezing_rain_talent) or enemies(tagged=1) > 4 frostaoecdactions()

  unless { enemies(tagged=1) > 3 and hastalent(freezing_rain_talent) or enemies(tagged=1) > 4 } and frostaoecdpostconditions()
  {
   #call_action_list,name=single
   frostsinglecdactions()
  }
 }
}

AddFunction defaultcdpostconditions
{
 { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } and frostcooldownscdpostconditions() or { enemies(tagged=1) > 3 and hastalent(freezing_rain_talent) or enemies(tagged=1) > 4 } and frostaoecdpostconditions() or frostsinglecdpostconditions()
}

### actions.aoe

AddFunction frostaoemainactions
{
 #blizzard,if=ovale.mouseover&ovale.movement
 if mouseover.present() and mouseover.healthpercent() < 100 and not mouseover.isfriend() and { speed() == 0 or buffpresent(movement_allowed_buff) } spell(blizzard)
 #call_action_list,name=essences,if=ovale.boss
 if target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() frostessencesmainactions()

 unless { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and frostessencesmainpostconditions()
 {
  #ice_nova
  spell(ice_nova)
  #flurry,if=(prev_gcd.1.ebonbolt|buff.brain_freeze.react&(prev_gcd.1.frostbolt&(buff.icicles.stack<4|!talent.glacial_spike.enabled)|prev_gcd.1.glacial_spike))&ovale.movement
  if { previousgcdspell(ebonbolt) or buffpresent(brain_freeze_buff) and { previousgcdspell(frostbolt) and { buffstacks(icicles_buff) < 4 or not hastalent(glacial_spike_talent) } or previousgcdspell(glacial_spike) } } and { speed() == 0 or buffpresent(movement_allowed_buff) } spell(flurry)
  #ice_lance,if=buff.fingers_of_frost.react
  if buffpresent(fingers_of_frost_buff) spell(ice_lance)
  #ray_of_frost,if=ovale.movement
  if speed() == 0 or buffpresent(movement_allowed_buff) spell(ray_of_frost)
  #ebonbolt,if=ovale.movement
  if speed() == 0 or buffpresent(movement_allowed_buff) spell(ebonbolt)
  #glacial_spike,if=ovale.movement
  if speed() == 0 or buffpresent(movement_allowed_buff) spell(glacial_spike)
  #frostbolt,if=ovale.movement
  if speed() == 0 or buffpresent(movement_allowed_buff) spell(frostbolt)
  #call_action_list,name=movement
  frostmovementmainactions()

  unless frostmovementmainpostconditions()
  {
   #ice_lance
   spell(ice_lance)
  }
 }
}

AddFunction frostaoemainpostconditions
{
 { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and frostessencesmainpostconditions() or frostmovementmainpostconditions()
}

AddFunction frostaoeshortcdactions
{
 #frozen_orb
 spell(frozen_orb)

 unless mouseover.present() and mouseover.healthpercent() < 100 and not mouseover.isfriend() and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(blizzard)
 {
  #call_action_list,name=essences,if=ovale.boss
  if target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() frostessencesshortcdactions()

  unless { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and frostessencesshortcdpostconditions()
  {
   #comet_storm
   spell(comet_storm)

   unless spell(ice_nova) or { previousgcdspell(ebonbolt) or buffpresent(brain_freeze_buff) and { previousgcdspell(frostbolt) and { buffstacks(icicles_buff) < 4 or not hastalent(glacial_spike_talent) } or previousgcdspell(glacial_spike) } } and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(flurry) or buffpresent(fingers_of_frost_buff) and spell(ice_lance) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(ray_of_frost) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(ebonbolt) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(glacial_spike)
   {
    #cone_of_cold
    if target.distance() < 12 spell(cone_of_cold)

    unless { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(frostbolt)
    {
     #call_action_list,name=movement
     frostmovementshortcdactions()
    }
   }
  }
 }
}

AddFunction frostaoeshortcdpostconditions
{
 mouseover.present() and mouseover.healthpercent() < 100 and not mouseover.isfriend() and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(blizzard) or { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and frostessencesshortcdpostconditions() or spell(ice_nova) or { previousgcdspell(ebonbolt) or buffpresent(brain_freeze_buff) and { previousgcdspell(frostbolt) and { buffstacks(icicles_buff) < 4 or not hastalent(glacial_spike_talent) } or previousgcdspell(glacial_spike) } } and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(flurry) or buffpresent(fingers_of_frost_buff) and spell(ice_lance) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(ray_of_frost) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(ebonbolt) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(glacial_spike) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(frostbolt) or frostmovementshortcdpostconditions() or spell(ice_lance)
}

AddFunction frostaoecdactions
{
 unless spell(frozen_orb) or mouseover.present() and mouseover.healthpercent() < 100 and not mouseover.isfriend() and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(blizzard)
 {
  #call_action_list,name=essences,if=ovale.boss
  if target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() frostessencescdactions()

  unless { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and frostessencescdpostconditions() or spell(comet_storm) or spell(ice_nova) or { previousgcdspell(ebonbolt) or buffpresent(brain_freeze_buff) and { previousgcdspell(frostbolt) and { buffstacks(icicles_buff) < 4 or not hastalent(glacial_spike_talent) } or previousgcdspell(glacial_spike) } } and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(flurry) or buffpresent(fingers_of_frost_buff) and spell(ice_lance) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(ray_of_frost) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(ebonbolt) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(glacial_spike) or target.distance() < 12 and spell(cone_of_cold)
  {
   #use_item,name=tidestorm_codex,if=buff.icy_veins.down&buff.rune_of_power.down
   if buffexpires(icy_veins_buff) and buffexpires(rune_of_power_buff) frostuseitemactions()
   #use_item,effect_name=cyclotronic_blast,if=buff.icy_veins.down&buff.rune_of_power.down
   if buffexpires(icy_veins_buff) and buffexpires(rune_of_power_buff) frostuseitemactions()

   unless { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(frostbolt)
   {
    #call_action_list,name=movement
    frostmovementcdactions()
   }
  }
 }
}

AddFunction frostaoecdpostconditions
{
 spell(frozen_orb) or mouseover.present() and mouseover.healthpercent() < 100 and not mouseover.isfriend() and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(blizzard) or { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and frostessencescdpostconditions() or spell(comet_storm) or spell(ice_nova) or { previousgcdspell(ebonbolt) or buffpresent(brain_freeze_buff) and { previousgcdspell(frostbolt) and { buffstacks(icicles_buff) < 4 or not hastalent(glacial_spike_talent) } or previousgcdspell(glacial_spike) } } and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(flurry) or buffpresent(fingers_of_frost_buff) and spell(ice_lance) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(ray_of_frost) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(ebonbolt) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(glacial_spike) or target.distance() < 12 and spell(cone_of_cold) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(frostbolt) or frostmovementcdpostconditions() or spell(ice_lance)
}

### actions.cooldowns

AddFunction frostcooldownsmainactions
{
 #call_action_list,name=talent_rop,if=talent.rune_of_power.enabled&active_enemies=1&cooldown.rune_of_power.full_recharge_time<cooldown.frozen_orb.remains
 if hastalent(rune_of_power_talent) and enemies(tagged=1) == 1 and spellcooldown(rune_of_power) < spellcooldown(frozen_orb) ropmainactions()
}

AddFunction frostcooldownsmainpostconditions
{
 hastalent(rune_of_power_talent) and enemies(tagged=1) == 1 and spellcooldown(rune_of_power) < spellcooldown(frozen_orb) and ropmainpostconditions()
}

AddFunction frostcooldownsshortcdactions
{
 #rune_of_power,if=prev_gcd.1.frozen_orb|target.time_to_die>10+cast_time&target.time_to_die<20
 if previousgcdspell(frozen_orb) or target.timetodie() > 10 + casttime(rune_of_power) and target.timetodie() < 20 spell(rune_of_power)
 #call_action_list,name=talent_rop,if=talent.rune_of_power.enabled&active_enemies=1&cooldown.rune_of_power.full_recharge_time<cooldown.frozen_orb.remains
 if hastalent(rune_of_power_talent) and enemies(tagged=1) == 1 and spellcooldown(rune_of_power) < spellcooldown(frozen_orb) ropshortcdactions()

 unless hastalent(rune_of_power_talent) and enemies(tagged=1) == 1 and spellcooldown(rune_of_power) < spellcooldown(frozen_orb) and ropshortcdpostconditions()
 {
  #bag_of_tricks
  spell(bag_of_tricks)
 }
}

AddFunction frostcooldownsshortcdpostconditions
{
 hastalent(rune_of_power_talent) and enemies(tagged=1) == 1 and spellcooldown(rune_of_power) < spellcooldown(frozen_orb) and ropshortcdpostconditions()
}

AddFunction frostcooldownscdactions
{
 #guardian_of_azeroth
 spell(guardian_of_azeroth)
 #icy_veins
 spell(icy_veins)
 #mirror_image
 spell(mirror_image)

 unless { previousgcdspell(frozen_orb) or target.timetodie() > 10 + casttime(rune_of_power) and target.timetodie() < 20 } and spell(rune_of_power)
 {
  #call_action_list,name=talent_rop,if=talent.rune_of_power.enabled&active_enemies=1&cooldown.rune_of_power.full_recharge_time<cooldown.frozen_orb.remains
  if hastalent(rune_of_power_talent) and enemies(tagged=1) == 1 and spellcooldown(rune_of_power) < spellcooldown(frozen_orb) ropcdactions()

  unless hastalent(rune_of_power_talent) and enemies(tagged=1) == 1 and spellcooldown(rune_of_power) < spellcooldown(frozen_orb) and ropcdpostconditions()
  {
   #use_item,name=balefire_branch,if=!talent.glacial_spike.enabled|buff.brain_freeze.react&prev_gcd.1.glacial_spike
   if not hastalent(glacial_spike_talent) or buffpresent(brain_freeze_buff) and previousgcdspell(glacial_spike) frostuseitemactions()
   #use_items
   frostuseitemactions()
   #blood_fury
   spell(blood_fury_sp)
   #berserking
   spell(berserking)
   #lights_judgment
   spell(lights_judgment)
   #fireblood
   spell(fireblood)
   #ancestral_call
   spell(ancestral_call)
  }
 }
}

AddFunction frostcooldownscdpostconditions
{
 { previousgcdspell(frozen_orb) or target.timetodie() > 10 + casttime(rune_of_power) and target.timetodie() < 20 } and spell(rune_of_power) or hastalent(rune_of_power_talent) and enemies(tagged=1) == 1 and spellcooldown(rune_of_power) < spellcooldown(frozen_orb) and ropcdpostconditions() or spell(bag_of_tricks)
}

### actions.essences

AddFunction frostessencesmainactions
{
 #concentrated_flame,line_cd=6,if=buff.rune_of_power.down
 if buffexpires(rune_of_power_buff) and timesincepreviousspell(concentrated_flame_essence) > 6 spell(concentrated_flame_essence)
}

AddFunction frostessencesmainpostconditions
{
}

AddFunction frostessencesshortcdactions
{
 #blood_of_the_enemy,if=(talent.glacial_spike.enabled&buff.icicles.stack=5&(buff.brain_freeze.react|prev_gcd.1.ebonbolt))|((active_enemies>3|!talent.glacial_spike.enabled)&(prev_gcd.1.frozen_orb|ground_aoe.frozen_orb.remains>5))
 if hastalent(glacial_spike_talent) and buffstacks(icicles_buff) == 5 and { buffpresent(brain_freeze_buff) or previousgcdspell(ebonbolt) } or { enemies(tagged=1) > 3 or not hastalent(glacial_spike_talent) } and { previousgcdspell(frozen_orb) or target.debuffremaining(frozen_orb_debuff) > 5 } spell(blood_of_the_enemy)
 #purifying_blast,if=buff.rune_of_power.down|active_enemies>3
 if buffexpires(rune_of_power_buff) or enemies(tagged=1) > 3 spell(purifying_blast)
 #ripple_in_space,if=buff.rune_of_power.down|active_enemies>3
 if buffexpires(rune_of_power_buff) or enemies(tagged=1) > 3 spell(ripple_in_space_essence)

 unless buffexpires(rune_of_power_buff) and timesincepreviousspell(concentrated_flame_essence) > 6 and spell(concentrated_flame_essence)
 {
  #reaping_flames,if=buff.rune_of_power.down
  if buffexpires(rune_of_power_buff) spell(reaping_flames_essence)
  #the_unbound_force,if=buff.reckless_force.up
  if buffpresent(reckless_force_buff) spell(the_unbound_force)
  #worldvein_resonance,if=buff.rune_of_power.down|active_enemies>3
  if buffexpires(rune_of_power_buff) or enemies(tagged=1) > 3 spell(worldvein_resonance_essence)
 }
}

AddFunction frostessencesshortcdpostconditions
{
 buffexpires(rune_of_power_buff) and timesincepreviousspell(concentrated_flame_essence) > 6 and spell(concentrated_flame_essence)
}

AddFunction frostessencescdactions
{
 #focused_azerite_beam,if=buff.rune_of_power.down|active_enemies>3
 if buffexpires(rune_of_power_buff) or enemies(tagged=1) > 3 spell(focused_azerite_beam)
 #memory_of_lucid_dreams,if=active_enemies<5&(buff.icicles.stack<=1|!talent.glacial_spike.enabled)&cooldown.frozen_orb.remains>10
 if enemies(tagged=1) < 5 and { buffstacks(icicles_buff) <= 1 or not hastalent(glacial_spike_talent) } and spellcooldown(frozen_orb) > 10 spell(memory_of_lucid_dreams_essence)
}

AddFunction frostessencescdpostconditions
{
 { buffexpires(rune_of_power_buff) or enemies(tagged=1) > 3 } and spell(purifying_blast) or { buffexpires(rune_of_power_buff) or enemies(tagged=1) > 3 } and spell(ripple_in_space_essence) or buffexpires(rune_of_power_buff) and timesincepreviousspell(concentrated_flame_essence) > 6 and spell(concentrated_flame_essence) or buffexpires(rune_of_power_buff) and spell(reaping_flames_essence) or buffpresent(reckless_force_buff) and spell(the_unbound_force) or { buffexpires(rune_of_power_buff) or enemies(tagged=1) > 3 } and spell(worldvein_resonance_essence)
}

### actions.movement

AddFunction frostmovementmainactions
{
}

AddFunction frostmovementmainpostconditions
{
}

AddFunction frostmovementshortcdactions
{
 #ice_floes,if=buff.ice_floes.down
 if not buffpresent(ice_floes_buff) and speed() > 0 spell(ice_floes)
}

AddFunction frostmovementshortcdpostconditions
{
}

AddFunction frostmovementcdactions
{
}

AddFunction frostmovementcdpostconditions
{
 buffexpires(ice_floes_buff) and speed() > 0 and spell(ice_floes)
}

### actions.precombat

AddFunction frostprecombatmainactions
{
 #flask
 #food
 #augmentation
 #arcane_intellect
 spell(arcane_intellect)
 #frostbolt
 spell(frostbolt)
}

AddFunction frostprecombatmainpostconditions
{
}

AddFunction frostprecombatshortcdactions
{
 unless spell(arcane_intellect)
 {
  #summon_water_elemental
  if not pet.present() spell(summon_water_elemental)
 }
}

AddFunction frostprecombatshortcdpostconditions
{
 spell(arcane_intellect) or spell(frostbolt)
}

AddFunction frostprecombatcdactions
{
 unless spell(arcane_intellect) or not pet.present() and spell(summon_water_elemental)
 {
  #snapshot_stats
  #mirror_image
  spell(mirror_image)
 }
}

AddFunction frostprecombatcdpostconditions
{
 spell(arcane_intellect) or not pet.present() and spell(summon_water_elemental) or spell(frostbolt)
}

### actions.single

AddFunction frostsinglemainactions
{
 #ice_nova,if=cooldown.ice_nova.ready&debuff.winters_chill.up
 if spellcooldown(ice_nova) == 0 and target.debuffpresent(winters_chill_debuff) spell(ice_nova)
 #flurry,if=talent.ebonbolt.enabled&prev_gcd.1.ebonbolt&buff.brain_freeze.react
 if hastalent(ebonbolt_talent) and previousgcdspell(ebonbolt) and buffpresent(brain_freeze_buff) spell(flurry)
 #flurry,if=prev_gcd.1.glacial_spike&buff.brain_freeze.react
 if previousgcdspell(glacial_spike) and buffpresent(brain_freeze_buff) spell(flurry)
 #flurry,low level fix.
 if Level() < 100 and not hastalent(ebonbolt_talent) and buffpresent(brain_freeze_buff) spell(flurry)
 #call_action_list,name=essences,if=ovale.boss&ovale.movement
 if { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } frostessencesmainactions()

 unless { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } and frostessencesmainpostconditions()
 {
  #blizzard,if=(active_enemies>2|active_enemies>1&!talent.splitting_ice.enabled)&ovale.mouseover&ovale.movement
  if { enemies(tagged=1) > 2 or enemies(tagged=1) > 1 and not hastalent(splitting_ice_talent) } and mouseover.present() and mouseover.healthpercent() < 100 and not mouseover.isfriend() and { speed() == 0 or buffpresent(movement_allowed_buff) } spell(blizzard)
  #ebonbolt,if=(buff.icicles.stack=5&!buff.brain_freeze.react)&ovale.movement
  if buffstacks(icicles_buff) == 5 and not buffpresent(brain_freeze_buff) and { speed() == 0 or buffpresent(movement_allowed_buff) } spell(ebonbolt)
  #ice_lance,if=buff.brain_freeze.react&(buff.fingers_of_frost.react|prev_gcd.1.flurry)&(buff.icicles.max_stack-buff.icicles.stack)*action.frostbolt.execute_time+action.glacial_spike.cast_time+action.glacial_spike.travel_time<incanters_flow_time_to.5.any&buff.memory_of_lucid_dreams.down
  if buffpresent(brain_freeze_buff) and { buffpresent(fingers_of_frost_buff) or previousgcdspell(flurry) } and { spelldata(icicles_buff max_stacks) - buffstacks(icicles_buff) } * executetime(frostbolt) + casttime(glacial_spike) + traveltime(glacial_spike) < stacktimeto(incanters_flow_buff 5 any) and buffexpires(memory_of_lucid_dreams_essence_buff) spell(ice_lance)
	#ice_lance,low level fix
	if Level() < 100 and buffpresent(fingers_of_frost_buff) spell(ice_lance)
  #glacial_spike,if=(buff.brain_freeze.react|prev_gcd.1.ebonbolt|talent.incanters_flow.enabled&cast_time+travel_time>incanters_flow_time_to.5.up&cast_time+travel_time<incanters_flow_time_to.4.down)&ovale.movement
  if { buffpresent(brain_freeze_buff) or previousgcdspell(ebonbolt) or hastalent(incanters_flow_talent) and casttime(glacial_spike) + traveltime(glacial_spike) > stacktimeto(incanters_flow_buff 5 up) and casttime(glacial_spike) + traveltime(glacial_spike) < stacktimeto(incanters_flow_buff 4 down) } and { speed() == 0 or buffpresent(movement_allowed_buff) } spell(glacial_spike)
  #ice_nova
  spell(ice_nova)
  #frostbolt,if=ovale.movement
  if speed() == 0 or buffpresent(movement_allowed_buff) spell(frostbolt)
  #call_action_list,name=movement
  frostmovementmainactions()

  unless frostmovementmainpostconditions()
  {
   #ice_lance
   spell(ice_lance)
  }
 }
}

AddFunction frostsinglemainpostconditions
{
 { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } and frostessencesmainpostconditions() or frostmovementmainpostconditions()
}

AddFunction frostsingleshortcdactions
{
 unless spellcooldown(ice_nova) == 0 and target.debuffpresent(winters_chill_debuff) and spell(ice_nova) or hastalent(ebonbolt_talent) and previousgcdspell(ebonbolt) and buffpresent(brain_freeze_buff) and spell(flurry) or previousgcdspell(glacial_spike) and buffpresent(brain_freeze_buff) and spell(flurry)
 {
  #call_action_list,name=essences,if=ovale.boss&ovale.movement
  if { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } frostessencesshortcdactions()

  unless { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } and frostessencesshortcdpostconditions()
  {
   #frozen_orb
   spell(frozen_orb)

   unless { enemies(tagged=1) > 2 or enemies(tagged=1) > 1 and not hastalent(splitting_ice_talent) } and mouseover.present() and mouseover.healthpercent() < 100 and not mouseover.isfriend() and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(blizzard)
   {
    #comet_storm
    spell(comet_storm)

    unless buffstacks(icicles_buff) == 5 and not buffpresent(brain_freeze_buff) and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(ebonbolt) or buffpresent(brain_freeze_buff) and { buffpresent(fingers_of_frost_buff) or previousgcdspell(flurry) } and { spelldata(icicles_buff max_stacks) - buffstacks(icicles_buff) } * executetime(frostbolt) + casttime(glacial_spike) + traveltime(glacial_spike) < stacktimeto(incanters_flow_buff 5 any) and buffexpires(memory_of_lucid_dreams_essence_buff) and spell(ice_lance) or { buffpresent(brain_freeze_buff) or previousgcdspell(ebonbolt) or hastalent(incanters_flow_talent) and casttime(glacial_spike) + traveltime(glacial_spike) > stacktimeto(incanters_flow_buff 5 up) and casttime(glacial_spike) + traveltime(glacial_spike) < stacktimeto(incanters_flow_buff 4 down) } and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(glacial_spike) or spell(ice_nova) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(frostbolt)
    {
     #call_action_list,name=movement
     frostmovementshortcdactions()
    }
   }
  }
 }
}

AddFunction frostsingleshortcdpostconditions
{
 spellcooldown(ice_nova) == 0 and target.debuffpresent(winters_chill_debuff) and spell(ice_nova) or hastalent(ebonbolt_talent) and previousgcdspell(ebonbolt) and buffpresent(brain_freeze_buff) and spell(flurry) or previousgcdspell(glacial_spike) and buffpresent(brain_freeze_buff) and spell(flurry) or { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } and frostessencesshortcdpostconditions() or { enemies(tagged=1) > 2 or enemies(tagged=1) > 1 and not hastalent(splitting_ice_talent) } and mouseover.present() and mouseover.healthpercent() < 100 and not mouseover.isfriend() and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(blizzard) or buffstacks(icicles_buff) == 5 and not buffpresent(brain_freeze_buff) and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(ebonbolt) or buffpresent(brain_freeze_buff) and { buffpresent(fingers_of_frost_buff) or previousgcdspell(flurry) } and { spelldata(icicles_buff max_stacks) - buffstacks(icicles_buff) } * executetime(frostbolt) + casttime(glacial_spike) + traveltime(glacial_spike) < stacktimeto(incanters_flow_buff 5 any) and buffexpires(memory_of_lucid_dreams_essence_buff) and spell(ice_lance) or { buffpresent(brain_freeze_buff) or previousgcdspell(ebonbolt) or hastalent(incanters_flow_talent) and casttime(glacial_spike) + traveltime(glacial_spike) > stacktimeto(incanters_flow_buff 5 up) and casttime(glacial_spike) + traveltime(glacial_spike) < stacktimeto(incanters_flow_buff 4 down) } and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(glacial_spike) or spell(ice_nova) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(frostbolt) or frostmovementshortcdpostconditions() or spell(ice_lance)
}

AddFunction frostsinglecdactions
{
 unless spellcooldown(ice_nova) == 0 and target.debuffpresent(winters_chill_debuff) and spell(ice_nova) or hastalent(ebonbolt_talent) and previousgcdspell(ebonbolt) and buffpresent(brain_freeze_buff) and spell(flurry) or previousgcdspell(glacial_spike) and buffpresent(brain_freeze_buff) and spell(flurry)
 {
  #call_action_list,name=essences,if=ovale.boss&ovale.movement
  if { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } frostessencescdactions()

  unless { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } and frostessencescdpostconditions() or spell(frozen_orb) or { enemies(tagged=1) > 2 or enemies(tagged=1) > 1 and not hastalent(splitting_ice_talent) } and mouseover.present() and mouseover.healthpercent() < 100 and not mouseover.isfriend() and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(blizzard) or spell(comet_storm) or buffstacks(icicles_buff) == 5 and not buffpresent(brain_freeze_buff) and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(ebonbolt) or buffpresent(brain_freeze_buff) and { buffpresent(fingers_of_frost_buff) or previousgcdspell(flurry) } and { spelldata(icicles_buff max_stacks) - buffstacks(icicles_buff) } * executetime(frostbolt) + casttime(glacial_spike) + traveltime(glacial_spike) < stacktimeto(incanters_flow_buff 5 any) and buffexpires(memory_of_lucid_dreams_essence_buff) and spell(ice_lance) or { buffpresent(brain_freeze_buff) or previousgcdspell(ebonbolt) or hastalent(incanters_flow_talent) and casttime(glacial_spike) + traveltime(glacial_spike) > stacktimeto(incanters_flow_buff 5 up) and casttime(glacial_spike) + traveltime(glacial_spike) < stacktimeto(incanters_flow_buff 4 down) } and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(glacial_spike) or spell(ice_nova)
  {
   #use_item,name=tidestorm_codex,if=buff.icy_veins.down&buff.rune_of_power.down
   if buffexpires(icy_veins_buff) and buffexpires(rune_of_power_buff) frostuseitemactions()
   #use_item,effect_name=cyclotronic_blast,if=buff.icy_veins.down&buff.rune_of_power.down
   if buffexpires(icy_veins_buff) and buffexpires(rune_of_power_buff) frostuseitemactions()

   unless { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(frostbolt)
   {
    #call_action_list,name=movement
    frostmovementcdactions()
   }
  }
 }
}

AddFunction frostsinglecdpostconditions
{
 spellcooldown(ice_nova) == 0 and target.debuffpresent(winters_chill_debuff) and spell(ice_nova) or hastalent(ebonbolt_talent) and previousgcdspell(ebonbolt) and buffpresent(brain_freeze_buff) and spell(flurry) or previousgcdspell(glacial_spike) and buffpresent(brain_freeze_buff) and spell(flurry) or { target.classification(normal) and enemies(tagged=1) >= 7 and not isgrouped() or target.classification(elite) and enemies(tagged=1) > 5 or boss() } and { speed() == 0 or buffpresent(movement_allowed_buff) } and frostessencescdpostconditions() or spell(frozen_orb) or { enemies(tagged=1) > 2 or enemies(tagged=1) > 1 and not hastalent(splitting_ice_talent) } and mouseover.present() and mouseover.healthpercent() < 100 and not mouseover.isfriend() and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(blizzard) or spell(comet_storm) or buffstacks(icicles_buff) == 5 and not buffpresent(brain_freeze_buff) and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(ebonbolt) or buffpresent(brain_freeze_buff) and { buffpresent(fingers_of_frost_buff) or previousgcdspell(flurry) } and { spelldata(icicles_buff max_stacks) - buffstacks(icicles_buff) } * executetime(frostbolt) + casttime(glacial_spike) + traveltime(glacial_spike) < stacktimeto(incanters_flow_buff 5 any) and buffexpires(memory_of_lucid_dreams_essence_buff) and spell(ice_lance) or { buffpresent(brain_freeze_buff) or previousgcdspell(ebonbolt) or hastalent(incanters_flow_talent) and casttime(glacial_spike) + traveltime(glacial_spike) > stacktimeto(incanters_flow_buff 5 up) and casttime(glacial_spike) + traveltime(glacial_spike) < stacktimeto(incanters_flow_buff 4 down) } and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(glacial_spike) or spell(ice_nova) or { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(frostbolt) or frostmovementcdpostconditions() or spell(ice_lance)
}

### actions.talent_rop

AddFunction ropmainactions
{
}

AddFunction ropmainpostconditions
{
}

AddFunction ropshortcdactions
{
 #rune_of_power,if=talent.glacial_spike.enabled&buff.icicles.stack=5&(buff.brain_freeze.react|talent.ebonbolt.enabled&cooldown.ebonbolt.remains<cast_time)&ovale.movement
 if hastalent(glacial_spike_talent) and buffstacks(icicles_buff) == 5 and { buffpresent(brain_freeze_buff) or hastalent(ebonbolt_talent) and spellcooldown(ebonbolt) < casttime(rune_of_power) } and { speed() == 0 or buffpresent(movement_allowed_buff) } spell(rune_of_power)
 #rune_of_power,if=!talent.glacial_spike.enabled&(talent.ebonbolt.enabled&cooldown.ebonbolt.remains<cast_time|talent.comet_storm.enabled&cooldown.comet_storm.remains<cast_time|talent.ray_of_frost.enabled&cooldown.ray_of_frost.remains<cast_time|charges_fractional>1.9)&ovale.movement
 if not hastalent(glacial_spike_talent) and { hastalent(ebonbolt_talent) and spellcooldown(ebonbolt) < casttime(rune_of_power) or hastalent(comet_storm_talent) and spellcooldown(comet_storm) < casttime(rune_of_power) or hastalent(ray_of_frost_talent) and spellcooldown(ray_of_frost) < casttime(rune_of_power) or charges(rune_of_power count=0) > 1.9 } and { speed() == 0 or buffpresent(movement_allowed_buff) } spell(rune_of_power)
}

AddFunction ropshortcdpostconditions
{
}

AddFunction ropcdactions
{
}

AddFunction ropcdpostconditions
{
 hastalent(glacial_spike_talent) and buffstacks(icicles_buff) == 5 and { buffpresent(brain_freeze_buff) or hastalent(ebonbolt_talent) and spellcooldown(ebonbolt) < casttime(rune_of_power) } and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(rune_of_power) or not hastalent(glacial_spike_talent) and { hastalent(ebonbolt_talent) and spellcooldown(ebonbolt) < casttime(rune_of_power) or hastalent(comet_storm_talent) and spellcooldown(comet_storm) < casttime(rune_of_power) or hastalent(ray_of_frost_talent) and spellcooldown(ray_of_frost) < casttime(rune_of_power) or charges(rune_of_power count=0) > 1.9 } and { speed() == 0 or buffpresent(movement_allowed_buff) } and spell(rune_of_power)
}
]]

		OvaleScripts:RegisterScript("MAGE", "frost", name, desc, code, "script")
	end
end
