local __exports = LibStub:GetLibrary("ovale/scripts/ovale_deathknight")
if not __exports then return end
__exports.registerDeathKnightBloodHooves = function(OvaleScripts)
do
	local name = "hooves_blood"
	local desc = "[Hooves][8.3] Death Knight: Blood"
	local code = [[
# Common functions.
Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_deathknight_spells)

# Blood
AddIcon specialization=1 help=main
{
	if InCombat() InterruptActions()

	if target.InRange(heart_strike) and not target.DebuffPresent(crowd_control_debuff) and HasFullControl()
    {
			BloodHealMeMain()
			BloodDefaultCdActions()

		BloodDefaultShortCdActions()

		if not target.DebuffPresent(blood_plague_debuff) Spell(blood_boil)
		BloodDefaultMainActions()
	}
}



AddFunction BloodDeathStrikeHealing
{
    if (IncomingDamage(5) / 4 > MaxHealth() / 100 * 7) IncomingDamage(5) / 4
    MaxHealth() / 100 * 7
}
AddFunction BloodHealMeMain
{
    unless(DebuffPresent(healing_immunity_debuff))
    {
        if (HealthPercent() <= 75)
        {
            if (Enemies() >= 3 and RunicPower() >= 70) Spell(bonestorm)
            if (BloodDeathStrikeHealing() <= HealthMissing()) Spell(death_strike)
            if (HealthPercent() <= 50) Spell(death_strike)
        }
    }
}
### actions.default

AddFunction bloodinterruptactions
{
 #if target.hasmanagedinterrupts() and target.mustbeinterrupted() or not target.hasmanagedinterrupts() and target.isinterruptible()
 #{
#  if target.inrange(mind_freeze) and target.isinterruptible() and target.remainingcasttime() <= casttime(mind_freeze) + gcd() spell(mind_freeze)
#  if target.inrange(asphyxiate) and not target.classification(worldboss) and target.remainingcasttime() <= casttime(asphyxiate) + gcd() spell(asphyxiate)
#  if target.distance(less 5) and not target.classification(worldboss) and target.remainingcasttime() <= casttime(war_stomp) + gcd() spell(war_stomp)
 #}
}

AddFunction blooduseheartessence
{
 spell(concentrated_flame_essence)
}

AddFunction blooduseitemactions
{
 #if item(trinket0slot usable=1) texture(inv_jewelry_talisman_12)
 #if item(trinket1slot usable=1) texture(inv_jewelry_talisman_12)
}

AddFunction bloodgetinmeleerange
{
 if checkboxon(opt_melee_range) and not target.inrange(death_strike) texture(misc_arrowlup help=l(not_in_melee_range))
}

### actions.default

AddFunction blooddefaultmainactions
{
 #call_action_list,name=standard
 bloodstandardmainactions()
}

AddFunction blooddefaultmainpostconditions
{
 bloodstandardmainpostconditions()
}

AddFunction blooddefaultshortcdactions
{
 #auto_attack
 bloodgetinmeleerange()
 #bag_of_tricks
 spell(bag_of_tricks)
 #tombstone,if=buff.bone_shield.stack>=7
 if buffstacks(bone_shield_buff) >= 7 spell(tombstone)
 #call_action_list,name=standard
 bloodstandardshortcdactions()
}

AddFunction blooddefaultshortcdpostconditions
{
 bloodstandardshortcdpostconditions()
}

AddFunction blooddefaultcdactions
{
 bloodinterruptactions()
 #blood_fury,if=cooldown.dancing_rune_weapon.ready&(!cooldown.blooddrinker.ready|!talent.blooddrinker.enabled)
 if spellcooldown(dancing_rune_weapon) == 0 and { not spellcooldown(blooddrinker) == 0 or not hastalent(blooddrinker_talent) } spell(blood_fury_ap)
 #berserking
 spell(berserking)
 #arcane_pulse,if=active_enemies>=2|rune<1&runic_power.deficit>60
 if enemies(tagged=1) >= 2 or runecount() < 1 and runicpowerdeficit() > 60 spell(arcane_pulse)
 #lights_judgment,if=buff.unholy_strength.up
 if buffpresent(unholy_strength_buff) spell(lights_judgment)
 #ancestral_call
 spell(ancestral_call)
 #fireblood
 spell(fireblood)

 unless spell(bag_of_tricks)
 {
  #use_items,if=cooldown.dancing_rune_weapon.remains>90
  if spellcooldown(dancing_rune_weapon) > 90 blooduseitemactions()
  #use_item,name=razdunks_big_red_button
  blooduseitemactions()
  #use_item,name=merekthas_fang
  blooduseitemactions()
  #use_item,name=ashvanes_razor_coral,if=debuff.razor_coral_debuff.down
  if target.debuffexpires(razor_coral_debuff) blooduseitemactions()
  #use_item,name=ashvanes_razor_coral,if=target.health.pct<31&equipped.dribbling_inkpod
  if target.healthpercent() < 31 and hasequippeditem(dribbling_inkpod_item) blooduseitemactions()
  #use_item,name=ashvanes_razor_coral,if=buff.dancing_rune_weapon.up&debuff.razor_coral_debuff.up&!equipped.dribbling_inkpod
  if buffpresent(dancing_rune_weapon_buff) and target.debuffpresent(razor_coral_debuff) and not hasequippeditem(dribbling_inkpod_item) blooduseitemactions()
  #potion,if=buff.dancing_rune_weapon.up
  if buffpresent(dancing_rune_weapon_buff) and checkboxon(opt_use_consumables) and target.classification(worldboss) item(unbridled_fury_item usable=1)
  #dancing_rune_weapon,if=!talent.blooddrinker.enabled|!cooldown.blooddrinker.ready
  if not hastalent(blooddrinker_talent) or not spellcooldown(blooddrinker) == 0 spell(dancing_rune_weapon)

  unless buffstacks(bone_shield_buff) >= 7 and spell(tombstone)
  {
   #call_action_list,name=standard
   bloodstandardcdactions()
  }
 }
}

AddFunction blooddefaultcdpostconditions
{
 spell(bag_of_tricks) or buffstacks(bone_shield_buff) >= 7 and spell(tombstone) or bloodstandardcdpostconditions()
}

### actions.precombat

AddFunction bloodprecombatmainactions
{
}

AddFunction bloodprecombatmainpostconditions
{
}

AddFunction bloodprecombatshortcdactions
{
}

AddFunction bloodprecombatshortcdpostconditions
{
}

AddFunction bloodprecombatcdactions
{
 #flask
 #food
 #augmentation
 #snapshot_stats
 #potion
 if checkboxon(opt_use_consumables) and target.classification(worldboss) item(unbridled_fury_item usable=1)
}

AddFunction bloodprecombatcdpostconditions
{
}

### actions.standard

AddFunction bloodstandardmainactions
{
 #death_strike,if=runic_power.deficit<=10
 if runicpowerdeficit() <= 10 spell(death_strike)
 #blooddrinker,if=!buff.dancing_rune_weapon.up
 if not buffpresent(dancing_rune_weapon_buff) spell(blooddrinker)
 #marrowrend,if=(buff.bone_shield.remains<=rune.time_to_3|buff.bone_shield.remains<=(gcd+cooldown.blooddrinker.ready*talent.blooddrinker.enabled*2)|buff.bone_shield.stack<3)&runic_power.deficit>=20
 if { buffremaining(bone_shield_buff) <= timetorunes(3) or buffremaining(bone_shield_buff) <= gcd() + { spellcooldown(blooddrinker) == 0 } * talentpoints(blooddrinker_talent) * 2 or buffstacks(bone_shield_buff) < 3 } and runicpowerdeficit() >= 20 spell(marrowrend)
 #blood_boil,if=charges_fractional>=1.8&(buff.hemostasis.stack<=(5-spell_targets.blood_boil)|spell_targets.blood_boil>2)
 if charges(blood_boil count=0) >= 1.8 and { buffstacks(hemostasis_buff) <= 5 - enemies(tagged=1) or enemies(tagged=1) > 2 } spell(blood_boil)
 #marrowrend,if=buff.bone_shield.stack<5&talent.ossuary.enabled&runic_power.deficit>=15
 if buffstacks(bone_shield_buff) < 5 and hastalent(ossuary_talent) and runicpowerdeficit() >= 15 spell(marrowrend)
 #death_strike,if=runic_power.deficit<=(15+buff.dancing_rune_weapon.up*5+spell_targets.heart_strike*talent.heartbreaker.enabled*2)|target.1.time_to_die<10
 if runicpowerdeficit() <= 15 + buffpresent(dancing_rune_weapon_buff) * 5 + enemies(tagged=1) * talentpoints(heartbreaker_talent) * 2 or target.timetodie() < 10 spell(death_strike)
 #death_and_decay,if=spell_targets.death_and_decay>=3
 if enemies(tagged=1) >= 3 spell(death_and_decay)
 #heart_strike,if=buff.dancing_rune_weapon.up|rune.time_to_4<gcd
 if buffpresent(dancing_rune_weapon_buff) or timetorunes(4) < gcd() spell(heart_strike)
 #blood_boil,if=buff.dancing_rune_weapon.up
 if buffpresent(dancing_rune_weapon_buff) spell(blood_boil)
 #death_and_decay,if=buff.crimson_scourge.up|talent.rapid_decomposition.enabled|spell_targets.death_and_decay>=2
 if buffpresent(crimson_scourge_buff) or hastalent(rapid_decomposition_talent) or enemies(tagged=1) >= 2 spell(death_and_decay)
 #consumption
 spell(consumption)
 #blood_boil
 spell(blood_boil)
 #heart_strike,if=rune.time_to_3<gcd|buff.bone_shield.stack>6
 if timetorunes(3) < gcd() or buffstacks(bone_shield_buff) > 6 spell(heart_strike)
}

AddFunction bloodstandardmainpostconditions
{
}

AddFunction bloodstandardshortcdactions
{
 unless runicpowerdeficit() <= 10 and spell(death_strike) or not buffpresent(dancing_rune_weapon_buff) and spell(blooddrinker) or { buffremaining(bone_shield_buff) <= timetorunes(3) or buffremaining(bone_shield_buff) <= gcd() + { spellcooldown(blooddrinker) == 0 } * talentpoints(blooddrinker_talent) * 2 or buffstacks(bone_shield_buff) < 3 } and runicpowerdeficit() >= 20 and spell(marrowrend) or charges(blood_boil count=0) >= 1.8 and { buffstacks(hemostasis_buff) <= 5 - enemies(tagged=1) or enemies(tagged=1) > 2 } and spell(blood_boil) or buffstacks(bone_shield_buff) < 5 and hastalent(ossuary_talent) and runicpowerdeficit() >= 15 and spell(marrowrend)
 {
  #bonestorm,if=runic_power>=100&!buff.dancing_rune_weapon.up
  if runicpower() >= 100 and not buffpresent(dancing_rune_weapon_buff) spell(bonestorm)

  unless { runicpowerdeficit() <= 15 + buffpresent(dancing_rune_weapon_buff) * 5 + enemies(tagged=1) * talentpoints(heartbreaker_talent) * 2 or target.timetodie() < 10 } and spell(death_strike) or enemies(tagged=1) >= 3 and spell(death_and_decay)
  {
   #rune_strike,if=(charges_fractional>=1.8|buff.dancing_rune_weapon.up)&rune.time_to_3>=gcd
   if { charges(rune_strike count=0) >= 1.8 or buffpresent(dancing_rune_weapon_buff) } and timetorunes(3) >= gcd() spell(rune_strike)

   unless { buffpresent(dancing_rune_weapon_buff) or timetorunes(4) < gcd() } and spell(heart_strike) or buffpresent(dancing_rune_weapon_buff) and spell(blood_boil) or { buffpresent(crimson_scourge_buff) or hastalent(rapid_decomposition_talent) or enemies(tagged=1) >= 2 } and spell(death_and_decay) or spell(consumption) or spell(blood_boil) or { timetorunes(3) < gcd() or buffstacks(bone_shield_buff) > 6 } and spell(heart_strike)
   {
    #rune_strike
    spell(rune_strike)
   }
  }
 }
}

AddFunction bloodstandardshortcdpostconditions
{
 runicpowerdeficit() <= 10 and spell(death_strike) or not buffpresent(dancing_rune_weapon_buff) and spell(blooddrinker) or { buffremaining(bone_shield_buff) <= timetorunes(3) or buffremaining(bone_shield_buff) <= gcd() + { spellcooldown(blooddrinker) == 0 } * talentpoints(blooddrinker_talent) * 2 or buffstacks(bone_shield_buff) < 3 } and runicpowerdeficit() >= 20 and spell(marrowrend) or charges(blood_boil count=0) >= 1.8 and { buffstacks(hemostasis_buff) <= 5 - enemies(tagged=1) or enemies(tagged=1) > 2 } and spell(blood_boil) or buffstacks(bone_shield_buff) < 5 and hastalent(ossuary_talent) and runicpowerdeficit() >= 15 and spell(marrowrend) or { runicpowerdeficit() <= 15 + buffpresent(dancing_rune_weapon_buff) * 5 + enemies(tagged=1) * talentpoints(heartbreaker_talent) * 2 or target.timetodie() < 10 } and spell(death_strike) or enemies(tagged=1) >= 3 and spell(death_and_decay) or { buffpresent(dancing_rune_weapon_buff) or timetorunes(4) < gcd() } and spell(heart_strike) or buffpresent(dancing_rune_weapon_buff) and spell(blood_boil) or { buffpresent(crimson_scourge_buff) or hastalent(rapid_decomposition_talent) or enemies(tagged=1) >= 2 } and spell(death_and_decay) or spell(consumption) or spell(blood_boil) or { timetorunes(3) < gcd() or buffstacks(bone_shield_buff) > 6 } and spell(heart_strike)
}

AddFunction bloodstandardcdactions
{
 unless runicpowerdeficit() <= 10 and spell(death_strike) or not buffpresent(dancing_rune_weapon_buff) and spell(blooddrinker) or { buffremaining(bone_shield_buff) <= timetorunes(3) or buffremaining(bone_shield_buff) <= gcd() + { spellcooldown(blooddrinker) == 0 } * talentpoints(blooddrinker_talent) * 2 or buffstacks(bone_shield_buff) < 3 } and runicpowerdeficit() >= 20 and spell(marrowrend)
 {
  #heart_essence,if=!buff.dancing_rune_weapon.up
  if not buffpresent(dancing_rune_weapon_buff) blooduseheartessence()

  unless charges(blood_boil count=0) >= 1.8 and { buffstacks(hemostasis_buff) <= 5 - enemies(tagged=1) or enemies(tagged=1) > 2 } and spell(blood_boil) or buffstacks(bone_shield_buff) < 5 and hastalent(ossuary_talent) and runicpowerdeficit() >= 15 and spell(marrowrend) or runicpower() >= 100 and not buffpresent(dancing_rune_weapon_buff) and spell(bonestorm) or { runicpowerdeficit() <= 15 + buffpresent(dancing_rune_weapon_buff) * 5 + enemies(tagged=1) * talentpoints(heartbreaker_talent) * 2 or target.timetodie() < 10 } and spell(death_strike) or enemies(tagged=1) >= 3 and spell(death_and_decay) or { charges(rune_strike count=0) >= 1.8 or buffpresent(dancing_rune_weapon_buff) } and timetorunes(3) >= gcd() and spell(rune_strike) or { buffpresent(dancing_rune_weapon_buff) or timetorunes(4) < gcd() } and spell(heart_strike) or buffpresent(dancing_rune_weapon_buff) and spell(blood_boil) or { buffpresent(crimson_scourge_buff) or hastalent(rapid_decomposition_talent) or enemies(tagged=1) >= 2 } and spell(death_and_decay) or spell(consumption) or spell(blood_boil) or { timetorunes(3) < gcd() or buffstacks(bone_shield_buff) > 6 } and spell(heart_strike)
  {
   #use_item,name=grongs_primal_rage
   blooduseitemactions()

   unless spell(rune_strike)
   {
    #arcane_torrent,if=runic_power.deficit>20
    if runicpowerdeficit() > 20 spell(arcane_torrent_runicpower)
   }
  }
 }
}

AddFunction bloodstandardcdpostconditions
{
 runicpowerdeficit() <= 10 and spell(death_strike) or not buffpresent(dancing_rune_weapon_buff) and spell(blooddrinker) or { buffremaining(bone_shield_buff) <= timetorunes(3) or buffremaining(bone_shield_buff) <= gcd() + { spellcooldown(blooddrinker) == 0 } * talentpoints(blooddrinker_talent) * 2 or buffstacks(bone_shield_buff) < 3 } and runicpowerdeficit() >= 20 and spell(marrowrend) or charges(blood_boil count=0) >= 1.8 and { buffstacks(hemostasis_buff) <= 5 - enemies(tagged=1) or enemies(tagged=1) > 2 } and spell(blood_boil) or buffstacks(bone_shield_buff) < 5 and hastalent(ossuary_talent) and runicpowerdeficit() >= 15 and spell(marrowrend) or runicpower() >= 100 and not buffpresent(dancing_rune_weapon_buff) and spell(bonestorm) or { runicpowerdeficit() <= 15 + buffpresent(dancing_rune_weapon_buff) * 5 + enemies(tagged=1) * talentpoints(heartbreaker_talent) * 2 or target.timetodie() < 10 } and spell(death_strike) or enemies(tagged=1) >= 3 and spell(death_and_decay) or { charges(rune_strike count=0) >= 1.8 or buffpresent(dancing_rune_weapon_buff) } and timetorunes(3) >= gcd() and spell(rune_strike) or { buffpresent(dancing_rune_weapon_buff) or timetorunes(4) < gcd() } and spell(heart_strike) or buffpresent(dancing_rune_weapon_buff) and spell(blood_boil) or { buffpresent(crimson_scourge_buff) or hastalent(rapid_decomposition_talent) or enemies(tagged=1) >= 2 } and spell(death_and_decay) or spell(consumption) or spell(blood_boil) or { timetorunes(3) < gcd() or buffstacks(bone_shield_buff) > 6 } and spell(heart_strike) or spell(rune_strike)
}

]]

		OvaleScripts:RegisterScript("DEATHKNIGHT", "blood", name, desc, code, "script")
	end
end
